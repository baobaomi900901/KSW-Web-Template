// node_modules/current-device/es/index.js
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
  return typeof obj;
} : function(obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
};
var previousDevice = window.device;
var device = {};
var changeOrientationList = [];
window.device = device;
var documentElement = window.document.documentElement;
var userAgent = window.navigator.userAgent.toLowerCase();
var television = ["googletv", "viera", "smarttv", "internet.tv", "netcast", "nettv", "appletv", "boxee", "kylo", "roku", "dlnadoc", "pov_tv", "hbbtv", "ce-html"];
device.macos = function() {
  return find("mac");
};
device.ios = function() {
  return device.iphone() || device.ipod() || device.ipad();
};
device.iphone = function() {
  return !device.windows() && find("iphone");
};
device.ipod = function() {
  return find("ipod");
};
device.ipad = function() {
  var iPadOS13Up = navigator.platform === "MacIntel" && navigator.maxTouchPoints > 1;
  return find("ipad") || iPadOS13Up;
};
device.android = function() {
  return !device.windows() && find("android");
};
device.androidPhone = function() {
  return device.android() && find("mobile");
};
device.androidTablet = function() {
  return device.android() && !find("mobile");
};
device.blackberry = function() {
  return find("blackberry") || find("bb10");
};
device.blackberryPhone = function() {
  return device.blackberry() && !find("tablet");
};
device.blackberryTablet = function() {
  return device.blackberry() && find("tablet");
};
device.windows = function() {
  return find("windows");
};
device.windowsPhone = function() {
  return device.windows() && find("phone");
};
device.windowsTablet = function() {
  return device.windows() && find("touch") && !device.windowsPhone();
};
device.fxos = function() {
  return (find("(mobile") || find("(tablet")) && find(" rv:");
};
device.fxosPhone = function() {
  return device.fxos() && find("mobile");
};
device.fxosTablet = function() {
  return device.fxos() && find("tablet");
};
device.meego = function() {
  return find("meego");
};
device.cordova = function() {
  return window.cordova && location.protocol === "file:";
};
device.nodeWebkit = function() {
  return _typeof(window.process) === "object";
};
device.mobile = function() {
  return device.androidPhone() || device.iphone() || device.ipod() || device.windowsPhone() || device.blackberryPhone() || device.fxosPhone() || device.meego();
};
device.tablet = function() {
  return device.ipad() || device.androidTablet() || device.blackberryTablet() || device.windowsTablet() || device.fxosTablet();
};
device.desktop = function() {
  return !device.tablet() && !device.mobile();
};
device.television = function() {
  var i = 0;
  while (i < television.length) {
    if (find(television[i])) {
      return true;
    }
    i++;
  }
  return false;
};
device.portrait = function() {
  if (screen.orientation && Object.prototype.hasOwnProperty.call(window, "onorientationchange")) {
    return includes(screen.orientation.type, "portrait");
  }
  if (device.ios() && Object.prototype.hasOwnProperty.call(window, "orientation")) {
    return Math.abs(window.orientation) !== 90;
  }
  return window.innerHeight / window.innerWidth > 1;
};
device.landscape = function() {
  if (screen.orientation && Object.prototype.hasOwnProperty.call(window, "onorientationchange")) {
    return includes(screen.orientation.type, "landscape");
  }
  if (device.ios() && Object.prototype.hasOwnProperty.call(window, "orientation")) {
    return Math.abs(window.orientation) === 90;
  }
  return window.innerHeight / window.innerWidth < 1;
};
device.noConflict = function() {
  window.device = previousDevice;
  return this;
};
function includes(haystack, needle) {
  return haystack.indexOf(needle) !== -1;
}
function find(needle) {
  return includes(userAgent, needle);
}
function hasClass(className) {
  return documentElement.className.match(new RegExp(className, "i"));
}
function addClass(className) {
  var currentClassNames = null;
  if (!hasClass(className)) {
    currentClassNames = documentElement.className.replace(/^\s+|\s+$/g, "");
    documentElement.className = currentClassNames + " " + className;
  }
}
function removeClass(className) {
  if (hasClass(className)) {
    documentElement.className = documentElement.className.replace(" " + className, "");
  }
}
if (device.ios()) {
  if (device.ipad()) {
    addClass("ios ipad tablet");
  } else if (device.iphone()) {
    addClass("ios iphone mobile");
  } else if (device.ipod()) {
    addClass("ios ipod mobile");
  }
} else if (device.macos()) {
  addClass("macos desktop");
} else if (device.android()) {
  if (device.androidTablet()) {
    addClass("android tablet");
  } else {
    addClass("android mobile");
  }
} else if (device.blackberry()) {
  if (device.blackberryTablet()) {
    addClass("blackberry tablet");
  } else {
    addClass("blackberry mobile");
  }
} else if (device.windows()) {
  if (device.windowsTablet()) {
    addClass("windows tablet");
  } else if (device.windowsPhone()) {
    addClass("windows mobile");
  } else {
    addClass("windows desktop");
  }
} else if (device.fxos()) {
  if (device.fxosTablet()) {
    addClass("fxos tablet");
  } else {
    addClass("fxos mobile");
  }
} else if (device.meego()) {
  addClass("meego mobile");
} else if (device.nodeWebkit()) {
  addClass("node-webkit");
} else if (device.television()) {
  addClass("television");
} else if (device.desktop()) {
  addClass("desktop");
}
if (device.cordova()) {
  addClass("cordova");
}
function handleOrientation() {
  if (device.landscape()) {
    removeClass("portrait");
    addClass("landscape");
    walkOnChangeOrientationList("landscape");
  } else {
    removeClass("landscape");
    addClass("portrait");
    walkOnChangeOrientationList("portrait");
  }
  setOrientationCache();
}
function walkOnChangeOrientationList(newOrientation) {
  for (var index = 0; index < changeOrientationList.length; index++) {
    changeOrientationList[index](newOrientation);
  }
}
device.onChangeOrientation = function(cb) {
  if (typeof cb == "function") {
    changeOrientationList.push(cb);
  }
};
var orientationEvent = "resize";
if (Object.prototype.hasOwnProperty.call(window, "onorientationchange")) {
  orientationEvent = "orientationchange";
}
if (window.addEventListener) {
  window.addEventListener(orientationEvent, handleOrientation, false);
} else if (window.attachEvent) {
  window.attachEvent(orientationEvent, handleOrientation);
} else {
  window[orientationEvent] = handleOrientation;
}
handleOrientation();
function findMatch(arr) {
  for (var i = 0; i < arr.length; i++) {
    if (device[arr[i]]()) {
      return arr[i];
    }
  }
  return "unknown";
}
device.type = findMatch(["mobile", "tablet", "desktop"]);
device.os = findMatch(["ios", "iphone", "ipad", "ipod", "android", "blackberry", "macos", "windows", "fxos", "meego", "television"]);
function setOrientationCache() {
  device.orientation = findMatch(["portrait", "landscape"]);
}
setOrientationCache();
var es_default = device;

// dep:current-device
var current_device_default = es_default;
export {
  current_device_default as default
};
//# sourceMappingURL=current-device.js.map
